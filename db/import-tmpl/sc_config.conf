/**
 * rAthena SC Config Database
 **
sc_config: {
	//***** Structure *****
	<StatusID>: {							// *String* Look at script_constants.c for the SC constant name or ID<SC_ID>
		Icon: "<StatusIcon>"				// (optional) *String* Look at script_constants.c for the SI constant name or ID<SI_ID>. Default to SI_BLANK
		DurationLookup: "<SkillName>"		// *String* Used for default duration lookup in 'status_sc_get_skill()' based on skill_cast_db.txt,
											// commonly the lookup is used for bonus bAddEff as default duration
		SCS: "<States>"						// (optional) *String* Look at script_constants.c for the SCS constant name. Multiple value must be separated with |
		SCB: "<CalculationFlag>"			// (optional) *String* Look at script_constants.c for the SCB constant name. Multiple value must be separated with |
		OPT1: "<Effect1>"					// (optional) *String* Non-stackable effect. Look at script_constants.c for the OPT1 constant name. Multiple value must be separated with |
		OPT2: "<Effect2>"					// (optional) *String* Look at script_constants.c for the OPT2 constant name. Multiple value must be separated with |
		OPT3: "<Effect3>"					// (optional) *String* Look at script_constants.c for the OPT3 constant name. Multiple value must be separated with |
		Option: "<EffectOption>"			// (optional) *String* Look at script_constants.c for the Option constant name. Multiple value must be separated with |
		Flag: "<Flag>"						// (optional) *String* Look at script_constants.c for the SCF constant name. Multiple value must be separated with |
		MinRate: <value>					// (optional) *Int* Minimum rate after SC reduction (10000 = 100%)
		MinDuration: <value>				// (optional) *Int* Minimum duration in ms after SC reduction
		Fail: ( "<StatusID>", ... )			// (optional) *String* Status that causes this SC to fail to activate. Look at script_constants.c for the SC constant name
		End: ( "<StatusID>", ... )			// (optional) *String* Status that will end if the SC activates. Look at script_constants.c for the SC constant name
		EndReturn: <value>					// (optional) *Boolean* If SC has 'End' list and succeeds to end other SC in the list, it won't give its effect
		DisabledOn: "<MapZone>"				// (optional) *String* SC is disabled on specified map zone
		Script: "{ Script }"				// (optional) *String* Script for this SC if activated
	}
*/
